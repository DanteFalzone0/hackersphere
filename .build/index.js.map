{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import gemini, {\n  Request,\n  Response,\n  NextFunction\n} from \"gemini-server\";\nimport fs from \"fs\";\nimport geminiHttpMirror from \"./HttpMirror\";\n\nfunction createGeminiServer(\n  geminiStaticDir=\"/home/runner/hackersphere/gemini-static\",\n  certFile=\"cert.pem\",\n  keyFile=\"key.pem\"\n) {\n  const cert = fs.readFileSync(certFile);\n  const key = fs.readFileSync(keyFile);\n  const geminiServer = gemini({ cert, key });\n  geminiServer.use((\n    req: Request,\n    _res: Response,\n    next: NextFunction\n  ) => {\n    console.log(`Handling request ${req.path}`);\n    next();\n  });\n\n  geminiServer.on(\"*\", (req: Request, res: Response) => {\n    console.log(\"Request: \" + req.url);\n    const path = `${geminiStaticDir}${req.url}`;\n    const requestedData = fs.readFileSync(path, \"utf-8\");\n    res.data(requestedData, \"text/gemini\");\n  });\n\n  return {\n    gemini: () => {\n      console.log(\"Starting Gemini server\");\n      return geminiServer;\n    }\n  }\n}\n\nfunction main() {\n  const gmi = createGeminiServer();\n  const mirror = geminiHttpMirror();\n  gmi.gemini().listen(443);\n  mirror.http().listen(80);\n}\n\nmain();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,2BAIO;AACP,gBAAe;AACf,wBAA6B;AAE7B,SAAS,mBACP,kBAAgB,2CAChB,WAAS,YACT,UAAQ,WACR;AACA,QAAM,OAAO,UAAAA,QAAG,aAAa,QAAQ;AACrC,QAAM,MAAM,UAAAA,QAAG,aAAa,OAAO;AACnC,QAAM,mBAAe,qBAAAC,SAAO,EAAE,MAAM,IAAI,CAAC;AACzC,eAAa,IAAI,CACf,KACA,MACA,SACG;AACH,YAAQ,IAAI,oBAAoB,IAAI,MAAM;AAC1C,SAAK;AAAA,EACP,CAAC;AAED,eAAa,GAAG,KAAK,CAAC,KAAc,QAAkB;AACpD,YAAQ,IAAI,cAAc,IAAI,GAAG;AACjC,UAAM,OAAO,GAAG,kBAAkB,IAAI;AACtC,UAAM,gBAAgB,UAAAD,QAAG,aAAa,MAAM,OAAO;AACnD,QAAI,KAAK,eAAe,aAAa;AAAA,EACvC,CAAC;AAED,SAAO;AAAA,IACL,QAAQ,MAAM;AACZ,cAAQ,IAAI,wBAAwB;AACpC,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAEA,SAAS,OAAO;AACd,QAAM,MAAM,mBAAmB;AAC/B,QAAM,aAAS,kBAAAE,SAAiB;AAChC,MAAI,OAAO,EAAE,OAAO,GAAG;AACvB,SAAO,KAAK,EAAE,OAAO,EAAE;AACzB;AAEA,KAAK;",
  "names": ["fs", "gemini", "geminiHttpMirror"]
}
